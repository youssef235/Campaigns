name: ${SERVER_NAME:-local}

services:
  redis:
    image: redislabs/redismod:latest
    restart: always
    ports:
      - ${REDIS_PORT:-6379}:6379
    volumes:
      - redis_data:/data
      - ./logs:/var/log/redis
    entrypoint: >
      redis-server
        --loadmodule /usr/lib/redis/modules/redisai.so
          ONNX redisai_onnxruntime/redisai_onnxruntime.so
          TF redisai_tensorflow/redisai_tensorflow.so
          TFLITE redisai_tflite/redisai_tflite.so
          TORCH redisai_torch/redisai_torch.so   
        --loadmodule /usr/lib/redis/modules/redisearch.so
        --loadmodule /usr/lib/redis/modules/redisgraph.so
        --loadmodule /usr/lib/redis/modules/redistimeseries.so
        --loadmodule /usr/lib/redis/modules/rejson.so
        --loadmodule /usr/lib/redis/modules/redisbloom.so
        --loadmodule /usr/lib/redis/modules/redisgears.so
        Plugin /var/opt/redislabs/modules/rg/plugin/gears_python.so
        --requirepass ${REDIS_PASSWORD:-admin}
        --logfile /var/log/redis/redis.log
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 30s
      retries: 50
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  redis_commander:
    image: rediscommander/redis-commander:latest
    restart: on-failure
    ports:
      - ${REDIS_COMMANDER_PORT:-8081}:8081
    environment:
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_PASSWORD=${REDIS_PASSWORD:-admin}
      - HTTP_USER=${REDIS_COMMANDER_USER:-admin}
      - HTTP_PASSWORD=${REDIS_COMMANDER_PASSWORD:-admin}
    depends_on:
      redis:
        condition: service_healthy

  postgres:
    image: postgres:latest
    restart: always
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-admin}
      - POSTGRES_USER=${POSTGRES_USER:-admin}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-admin}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d admin" ]
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:latest
    restart: always
    ports:
      - ${PGADMIN_PORT:-5050}:80
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL:-admin@admin.com}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD:-admin}
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy

  celery_worker:
    build: .
    command: celery -A project worker --scheduler redbeat.RedBeatScheduler --queues celery -l info --logfile /ride_server/logs/celery_worker.log
    restart: always
    env_file:
      - .env
    volumes:
      - .:/ride_server
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "celery", "-A", "project", "status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  celery_beat:
    build: .
    command: celery -A project beat -l info --logfile /ride_server/logs/celery_beat.log
    restart: always
    depends_on:
      celery_worker:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - .:/ride_server
    healthcheck:
      test: ["CMD", "celery", "-A", "project", "status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  celery_flower:
    build: .
    restart: always
    command: >
      sh -c "celery flower -A project --port=5555 -l info 2>&1 | tee /ride_server/logs/celery_flower.log"
    ports:
      - ${FLOWER_PORT:-5555}:5555
    depends_on:
      celery_beat:
        condition: service_healthy
    environment:
      FLOWER_BASIC_AUTH: ${FLOWER_USER:-admin}:${FLOWER_PASSWORD:-admin}
      CELERY_BROKER: redis://:${REDIS_PASSWORD:-admin}@redis:6379/0
      CELERY_BACKEND: redis://:${REDIS_PASSWORD:-admin}@redis:6379/0
    volumes:
      - .:/ride_server
    healthcheck:
      test: [ "CMD", "curl", "--fail", "--user", "${FLOWER_USER:-admin}:${FLOWER_PASSWORD:-admin}", "http://localhost:5555/" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  ride_server:
    build:
      context: .
    ports:
      - "${SERVER_PORT:-9000}:9000"
    depends_on:
      celery_beat:
        condition: service_healthy
    restart: on-failure
    command: bash -c "
      python manage.py collectstatic --no-input &&
      python manage.py migrate &&
      uvicorn project.asgi:application --host 0.0.0.0 --port 9000 --reload 2>&1 | tee -a /ride_server/logs/server.log"
    volumes:
      - .:/ride_server
      - ./logs:/ride_server/logs
    env_file:
      - .env

volumes:
  redis_data:
  postgres_data:
  pgadmin_data:

