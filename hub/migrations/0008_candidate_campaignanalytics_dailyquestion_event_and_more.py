# Generated by Django 5.2.5 on 2025-09-14 09:48

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('hub', '0007_botuser_phone_number'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Candidate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('position', models.CharField(max_length=200)),
                ('party', models.CharField(blank=True, max_length=200, null=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('program', models.TextField(blank=True, null=True)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='candidates/')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='candidates/logos/')),
                ('website', models.URLField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('social_media', models.JSONField(blank=True, default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CampaignAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_supporters', models.PositiveIntegerField(default=0)),
                ('total_volunteers', models.PositiveIntegerField(default=0)),
                ('total_events', models.PositiveIntegerField(default=0)),
                ('total_polls', models.PositiveIntegerField(default=0)),
                ('total_speeches', models.PositiveIntegerField(default=0)),
                ('total_fake_news_alerts', models.PositiveIntegerField(default=0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('candidate', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='hub.candidate')),
            ],
        ),
        migrations.CreateModel(
            name='DailyQuestion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('question', models.TextField()),
                ('answer', models.TextField(blank=True, null=True)),
                ('is_answered', models.BooleanField(default=False)),
                ('is_public', models.BooleanField(default=True)),
                ('asked_at', models.DateTimeField(auto_now_add=True)),
                ('answered_at', models.DateTimeField(blank=True, null=True)),
                ('bot_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions_asked', to='hub.botuser')),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='daily_questions', to='hub.candidate')),
            ],
            options={
                'ordering': ['-asked_at'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=300)),
                ('description', models.TextField()),
                ('event_type', models.CharField(choices=[('conference', 'Conference'), ('meeting', 'Meeting'), ('rally', 'Rally'), ('debate', 'Debate'), ('announcement', 'Announcement'), ('other', 'Other')], default='meeting', max_length=20)),
                ('location', models.CharField(max_length=300)),
                ('latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True)),
                ('start_datetime', models.DateTimeField()),
                ('end_datetime', models.DateTimeField(blank=True, null=True)),
                ('is_public', models.BooleanField(default=True)),
                ('max_attendees', models.PositiveIntegerField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='events/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='hub.candidate')),
            ],
            options={
                'ordering': ['-start_datetime'],
            },
        ),
        migrations.CreateModel(
            name='FakeNewsAlert',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=300)),
                ('content', models.TextField()),
                ('source_url', models.URLField()),
                ('source_platform', models.CharField(max_length=100)),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=10)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_resolved', models.BooleanField(default=False)),
                ('response_action', models.TextField(blank=True, null=True)),
                ('detected_at', models.DateTimeField(auto_now_add=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fake_news_alerts', to='hub.candidate')),
            ],
            options={
                'ordering': ['-detected_at'],
            },
        ),
        migrations.CreateModel(
            name='Poll',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=300)),
                ('question', models.TextField()),
                ('options', models.JSONField()),
                ('is_anonymous', models.BooleanField(default=True)),
                ('allows_multiple_answers', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='polls', to='hub.candidate')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Speech',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=300)),
                ('ideas', models.TextField()),
                ('full_speech', models.TextField()),
                ('summary', models.TextField()),
                ('facebook_post', models.TextField(blank=True, null=True)),
                ('twitter_post', models.TextField(blank=True, null=True)),
                ('is_published', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='speeches', to='hub.candidate')),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='speeches', to='hub.event')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Volunteer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('role', models.CharField(default='volunteer', max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('bot_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='volunteer_records', to='hub.botuser')),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='volunteers', to='hub.candidate')),
            ],
            options={
                'ordering': ['-joined_at'],
                'unique_together': {('candidate', 'bot_user')},
            },
        ),
        migrations.CreateModel(
            name='VolunteerActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('canvassing', 'Canvassing'), ('posters', 'Poster Distribution'), ('social_media', 'Social Media Sharing'), ('event_organization', 'Event Organization'), ('phone_calls', 'Phone Calls'), ('data_entry', 'Data Entry'), ('other', 'Other')], max_length=20)),
                ('description', models.TextField()),
                ('supporters_contacted', models.PositiveIntegerField(default=0)),
                ('posters_distributed', models.PositiveIntegerField(default=0)),
                ('hours_worked', models.DecimalField(decimal_places=2, default=0, max_digits=4)),
                ('points_earned', models.PositiveIntegerField(default=0)),
                ('location', models.CharField(blank=True, max_length=200, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('volunteer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='hub.volunteer')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EventAttendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attended_at', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('bot_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_attendances', to='hub.botuser')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendances', to='hub.event')),
            ],
            options={
                'unique_together': {('event', 'bot_user')},
            },
        ),
        migrations.CreateModel(
            name='PollResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('selected_options', models.JSONField()),
                ('responded_at', models.DateTimeField(auto_now_add=True)),
                ('bot_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='poll_responses', to='hub.botuser')),
                ('poll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='hub.poll')),
            ],
            options={
                'unique_together': {('poll', 'bot_user')},
            },
        ),
        migrations.CreateModel(
            name='Supporter',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('district', models.CharField(blank=True, max_length=100, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True)),
                ('support_level', models.IntegerField(default=5, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('notes', models.TextField(blank=True, null=True)),
                ('registered_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('bot_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='support_records', to='hub.botuser')),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supporters', to='hub.candidate')),
            ],
            options={
                'ordering': ['-registered_at'],
                'unique_together': {('candidate', 'bot_user')},
            },
        ),
    ]
